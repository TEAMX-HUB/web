/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import t from"../../core/Error.js";import{waitTick as i,isAbortError as l}from"../../core/promiseUtils.js";class e{constructor(t,i=0,l=t.lods.length-1){this.tileInfo=t,this.minLOD=i,this.maxLOD=l}get effectiveMinLOD(){return this.minLOD??this.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}getAvailability(t,i,l){const e=this.tileInfo?.lodAt(t);return!e||t<this.minLOD||t>this.maxLOD?"unavailable":e.cols&&e.rows?l>=e.cols[0]&&l<=e.cols[1]&&i>=e.rows[0]&&i<=e.rows[1]?"unknown":"unavailable":"unknown"}async fetchAvailability(l,e,a,o){await i(o);const s=this.getAvailability(l,e,a);if("unavailable"===s)throw new t("tile-map:tile-unavailable","Tile is not available",{level:l,row:e,col:a});return s}async fetchAvailabilityUpsample(t,e,a,o,s){await i(s),o.level=t,o.row=e,o.col=a;const n=this.tileInfo;return n.updateTileInfo(o),this.fetchAvailability(t,e,a,s).catch((t=>{if(l(t))throw t;if(n.upsampleTile(o))return this.fetchAvailabilityUpsample(o.level,o.row,o.col,o,s);throw t}))}}export{e as default};
